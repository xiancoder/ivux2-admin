/* ================================================================================*\
*  |说明|_Regexp_正则 测试 TEST
*  |说明|源头
\*================================================================================ */
// 制作正则表达式
function createRegexp (op) {
    let args = Array.prototype.slice.call(arguments, 0)
    op = op || ''
    let regText = args.join('')
    return {
        g: new RegExp(regText, 'g'),
        gi: new RegExp(regText, 'gi'),
        i: new RegExp(regText, 'i'),
        no: new RegExp(regText, '')
    }
}
export default {
    n01: createRegexp('^[\u4E00-\u9FA5]+$').g, // 纯中文
    n02: /^[\u4E00-\u9FA5\uF900-\uFA2D]+$/, // 纯中文
    n03: /^[\u4e00-\u9fa5]{1}[A-Z]{1}[A-Z_0-9]{5}$/, // 车牌号
    n04: /^[a-zA-Z]+$/, // 大小写字母
    n05: /^[0-9]+$/, // 数字`11``
    n06: /^<\/?[^>]+>$/, // 标签
    n07: /^[A-Za-z0-9](([_\.\+\-]?[a-zA-Z0-9]+)*)@([A-Za-z0-9]+)(([\.\-]?[a-zA-Z0-9]+)*)\.([A-Za-z]{2,})$/, // 邮箱
    n08: /^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/, // 邮箱
    n09: /^http[s]?:\/\/([\w-]+\.)+[\w-]+([\w-.\/?%&=]*)?$/, // 网址
    n10: /^[a-zA-z]+:\/\/(\w+(-\w+)*)(\.(\w+(-\w+)*))*(\?\S*)?$/, // 网址
    n11: /^(13[0-9]|14[0-9]|15[0|1|2|3|5|6|7|8|9]|17[0-9]|18[0-9])\d{8}$/, // 手机号码
    n12: /^(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)$/, // IP地址
    n13: /^(\d+)\.(\d+)\.(\d+)\.(\d+)/, // IP地址
    n14: /^(([0\+]\d{2,3})?-?(0\d{2,3}))?-?(\d{7,8})(-(\d{3,}))?$/, // 区号 电话
    n15: /^\d{6}$/, // 邮编
    n16: /^(.*)\.(jpg|bmp|gif|ico|pcx|jpeg|tif|png|raw|tga)$/, // 图片格式
    n17: /^(.*)\.(rar|zip|7zip|tgz)$/, // 压缩包
    n18: /^\d{4}(\-|\/|\.)\d{1,2}\1\d{1,2}$/, // 日期格式
    n20: /^(h|H)(r|R)(e|E)(f|F) *= *(\'|\")?(\w|\\|\/|\.)+(\'|\"| *|>)?$/, // href = 123
    n21: /^(s|S)(r|R)(c|C) *= *(\'|\")?(\w|\\|\/|\.)+(\'|\"| *|>)?$/, // src = 123
    n22: /^[\u4e00-\u9fa5_a-zA-Z0-9\@\.|_]+$/, // 用户名

    // 以下已经投入使用
    a01: /^(([1-9][0-9]*)|(([0]\.\d{1,2}|[1-9][0-9]*\.\d{1,2})))$/, // 匹配整数，小数限2位
    a02: /^((0\.([1-9](\d)?|[0][1-9]))|([1-9]([0-9]{1,5})?(\.\d{1,2})?)?)?$/, // 匹配整数限6位，小数限2位（不含0）
    a03: /(^[1-9]\d{0,5}(\.\d{1,2})?$)|(^0$)|(^\d\.\d{1,2}$)/, // 匹配整数限6位，小数限2位（包含0）
    a04: /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/, // 15或18位 身份证号
    a05: /^[1][2-9][0-9]{9}$/, // 广义范围手机号
    a06: /(^\d{18}$)|(^\d{17}(\d|X|x)$)/, // 18位 身份证号

    // 以下已经投入使用 (配合表单校验)(不管长度)
    // 注意不要写g
    // b01: /^[0-9a-zA-Z]+[0-9]+[a-zA-Z]+[0-9]*$/, // 密码-可用数字字母 需同时包含 不好维护 废弃
    b01: /[a-zA-Z]/, // 大小写字母
    b02: /[0-9]/, // 数字
    b03: /[\~\!\@\#\$\%\^\&\*\(\)\_\+\`\-\=\[\]\;\'\,\.\/\\\<\>\?\:\"\{\}\|]/, // 规定标点符号
    b04: /^[a-zA-Z0-9]+$/, // 只能用数字字母
    b05: /^[0-9]*$/, // QQ必须使用纯数字
    b06: /^[a-zA-Z]{1}[\-\_a-zA-Z0-9]{5,19}$/, // 微信校验

    // 2020年1月6日17:29:11 重新整理并总结单元测试
    // c 代表校验项应包含的内容
    c01: /[a-zA-Z]/, // 内容 包含 大小写字母
    c02: /[0-9]/, // 内容 包含 数字
    c03: /[\~\!\@\#\$\%\^\&\*\(\)\_\+\`\-\=\[\]\;\'\,\.\/\\\<\>\?\:\"\{\}\|]/, // 内容 包含 规定标点符号
    c04: /[\-\_\.]/, // 内容 包含 简单符号符号

    // 以下 代表校验项应符合的规则
    // 身份证号
    cardId: /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/, // 15或18位 身份证号
    // -------------------------------------------------------------------------
    // 手机号
    // 肯定是1开头 2-9均可以使用 肯定是11位 但不包括400电话
    phone: /^[1][2-9][0-9]{9}$/,
    // -------------------------------------------------------------------------
    // 邮箱
    // 没有统一的邮箱账号格式
    // 但是所有邮箱都符合“名称@域名”的规律
    // 暂定 数字字母开头 允许使用数字字母_.+- 必须有@xx.xx
    email: /^[A-Za-z0-9](([_\.\+\-]?[a-zA-Z0-9]+)*)@([A-Za-z0-9]+)(([\.\-]?[a-zA-Z0-9]+)*)\.([A-Za-z]{2,})$/, // 邮箱
    // -------------------------------------------------------------------------
    // IP地址
    ip: /^(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)$/, // IP地址
    // -------------------------------------------------------------------------
    // 车牌号
    // 序号编码规则有三种，分别是：
    // （a）序号的每一位都使用阿拉伯数字；
    // （b）序号的每一位可单独使用英文字母，26个英文字母中O和I不能使用；
    // （c）序号中允许出现2位英文字母，26个英文字母中O和I不能使用。
    // 1.常规车牌号：仅允许以汉字开头，后面可录入六个字符，由大写英文字母和阿拉伯数字组成。如：粤B12345；
    // 2.武警车牌：允许前两位为大写英文字母，后面可录入七个字符，由大写英文字母和阿拉伯数字组成，其中第三位可录汉字也可录大写英文字母及阿拉伯数字，如：WJ01警0081、WJ0112345。
    // 3.最后一个为汉字的车牌：允许以汉字开头，后面可录入六个字符，前五位字符，由大写英文字母和阿拉伯数字组成，而最后一个字符为汉字，汉字包括“挂”、“学”、“警”、“军”、“港”、“澳”。如：粤Z1234港。
    // 4.新军车牌：以两位为大写英文字母开头，后面以5位阿拉伯数字组成。如：BA12345。
    // 5.黑龙江车牌存在08或38开头的情况
    carId: /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领ABCDEFGHJKLMNPQRSTUVWXYZ]{1}[ABCDEFGHJKLMNPQRSTUVWXYZ]{1}[ABCDEFGHJKLMNPQRSTUVWXYZ0-9]{4}[ABCDEFGHJKLMNPQRSTUVWXYZ0-9挂学警港澳]{1}$/,
    // -------------------------------------------------------------------------
    // 微信账号
    // 1、微信号是微信的唯一凭证，只能设置1次；
    // 2、可使用6-20个字母、数字、下划线和减号。例如：“weixin”、“qq_123”、“qq-123”；
    // 3、必须以字母开头（字母不区分大小写）；
    // 4、不支持设置中文。
    weixin: /^[a-zA-Z][\-\_a-zA-Z0-9]{5,19}$/, // 微信校验
    // -------------------------------------------------------------------------

    // --------------
    end: null
}
